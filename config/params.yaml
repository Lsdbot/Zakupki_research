preprocessing:
  merge_column: purchase
  change_ids_columns: ['purchase', 'supplier', 'customer']
  fillna_columns:
    item_descriptions: purchase_name
    purchase_name: okpd2_names
  sort_columns: ['supplier', 'min_publish_date']
  change_columns:
    forsmallbiz:
      t: 1
      f: 0
  change_type_columns:
    supplier: category
    reg_code: category
  drop_columns: ['region_code', 'okpd2_code', 'min_publish_date']
  text_columns: ['purchase_name', 'item_descriptions', 'okpd2_names']
  n_components: 100
  filter_column: supplier
  size: 4
  train_test_split:
    test_size: 0.2
    random_state: 42
    stratify: supplier
  recommend_submission:
    group: supplier
    values: purchase
    name: purchases
  winner_submission:
    column: is_winner
    name: is_winner
  date: min_publish_date
  region: region_code
  okpd2: okpd2_code
  purchase_size:
    group: purchase
    values: supplier
    name: purchase_size
    on_col: purchase
  flag:
    train_columns: ['supplier', 'customer', 'flag_won']
    group: ['supplier', 'customer']
    on_col: ['supplier', 'customer']
  uniq_okpd2:
    group: supplier
    values: okpd2_code
    on_col: supplier
    name: n_unique_okpd2
  recommender:
    drop_columns: ['supplier', 'reg_code', 'is_winner',
                   'vectorized', 'customer', 'flag_won',
                   'purchase_size', 'n_unique_okpd2']
    filter_column: reg_code
    sup_column: supplier
    index_column: purchase
  supplier_path: ../data/raw/small_suppliers.csv
  purchases_path: ../data/raw/small_purchases.csv
  train_data: ../data/processed/train_data.csv
  test_data: ../data/processed/test_data.csv
  evaluate_data: ../data/check/evaluate_data.csv
  recommend_sub_path: ../data/check/recommend_submission.csv
  winner_sub_path: ../data/check/winner_submission.csv

train:
  recommender:
    drop_columns: ['supplier', 'reg_code', 'is_winner',
                   'vectorized', 'customer', 'flag_won',
                   'purchase_size', 'n_unique_okpd2']
    filter_column: reg_code
    sup_column: supplier
    index_column: purchase
    vector: vectorized
    n_trials: 20
    random_state: 42
    N_FOLDS: 4
    params: ../models/params/recommender_params.yaml
    models: ../models/models/recommender_models.joblib
    metrics: ../models/recommender_metrics.yaml
  win_predictor:
    test_size: 0.25
    drop_columns: ['vectorized', 'purchase', 'customer']
    cat_features: ['supplier', 'reg_code']
    target: is_winner
    n_trials: 10
    random_state: 42
    N_FOLDS: 4
    params: ../models/params/ensemble_params.yaml
    models: ../models/models/ensemble_models.joblib
    metrics: ../models/win_metrics.yaml

evaluate:
  recommend_sub_path: ../data/check/recommend_submission.csv
  winner_sub_path: ../data/check/winner_submission.csv
  evaluate_data: ../data/check/evaluate_data.csv

endpoints:
  train_recommender: "http://fastapi:8000/load-recommender-model/"
  train_win_predictor: "http://fastapi:8000/load-win-predictor-model"
  evaluate_recommender: "http://fastapi:8000/load-evaluate-data-recommends/"
  evaluate_win_predictor: "http://fastapi:8000/load-evaluate-data-win-predict"
  train_evaluate_recommender: "http://fastapi:8000/load-all-data/{user_id}"
#  train_recommender: "http://localhost:8000/load-recommender-model/"
#  train_win_predictor: "http://localhost:8000/load-win-predictor-model"
#  evaluate_recommender: "http://localhost:8000/load-evaluate-data-recommends/"
#  evaluate_win_predictor: "http://localhost:8000/load-evaluate-data-win-predict"
#  train_evaluate_recommender: "http://localhost:8000/load-all-data/{user_id}"
